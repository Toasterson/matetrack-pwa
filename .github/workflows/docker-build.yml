name: Build and Publish

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Convert repository name to lowercase
      id: lowercase
      run: echo "repo=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ steps.lowercase.outputs.repo }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push standard Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Chainguard variant
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.chainguard
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ env.REGISTRY }}/${{ steps.lowercase.outputs.repo }}:chainguard
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  helm:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.14.0'

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Convert repository name to lowercase
      id: lowercase
      run: echo "repo=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

    - name: Set chart version
      id: chart_version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION="0.1.0-${GITHUB_SHA::8}"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Update Chart.yaml with version
      run: |
        sed -i "s/version: .*/version: ${{ steps.chart_version.outputs.version }}/" helm/matetrack/Chart.yaml
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          APP_VERSION=${GITHUB_REF#refs/tags/v}
          sed -i "s/appVersion: .*/appVersion: \"$APP_VERSION\"/" helm/matetrack/Chart.yaml
        fi

    - name: Package Helm chart
      run: |
        helm package helm/matetrack --destination ./helm-packages

    - name: Push Helm chart to OCI registry
      run: |
        helm push ./helm-packages/matetrack-${{ steps.chart_version.outputs.version }}.tgz oci://${{ env.REGISTRY }}/${{ steps.lowercase.outputs.repo }}/helm